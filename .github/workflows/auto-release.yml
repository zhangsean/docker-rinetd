#=================================================
# https://github.com/zhangsean/docker-rinetd
# Description: Auto check latest rinetd release and tag zhangsean/rinetd using GitHub Actions
# License: Apache V2.0
# Author: ZhangSean
#=================================================

name: Follow up official rinetd release

on:
  schedule:
    - cron: 0 23 * * *
  watch:
    types: [started]
    if: github.event.repository.owner.id == github.event.sender.id
  push:
    paths:
      - '.github/workflows/*.yml'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Check rinetd release
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get install -y jq
          git fetch --tags
          export CURRENT=$(git tag --sort=creatordate | tail -n 1)
          echo "CURRENT=$CURRENT"
          export RELEASE_LATEST=https://api.github.com/repos/samhocevar/rinetd/releases/latest
          export LATEST=`curl -s $RELEASE_LATEST | sed -n '/tag_name/s/.*\(v.*\)".*/\1/p'`
          echo "LATEST=$LATEST"
          if [ "$LATEST" != "$CURRENT" ]; then
            echo "New rinetd release: $LATEST"
            echo "CURRENT=$CURRENT" >> $GITHUB_ENV
            echo "LATEST=$LATEST" >> $GITHUB_ENV
          else
            echo "No new rinetd release"
          fi

      - name: Bump to new rinetd version
        if: success() && env.CURRENT != '' && env.LATEST != ''
        env:
          DEBIAN_FRONTEND: noninteractive
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Bump rinetd version from $CURRENT to $LATEST"
          sed -i "/RINETD_VERSION/s/$CURRENT/$LATEST/g" Dockerfile
          # commit and push
          if [ `git status | wc -l` > 0 ]; then
            git config user.email zxf2342@qq.com
            git config user.name zhangsean
            git commit -a -m "Bump to rinetd $LATEST"
            git push
          fi

      - name: Create Release
        uses: actions/create-release@v1
        if: success() && env.LATEST != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.LATEST }}
          release_name: ${{ env.LATEST }}
          body: |
            Bump to rinetd ${{ env.LATEST }}
          draft: false
          prerelease: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: success() && env.LATEST != ''
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: success() && env.LATEST != ''
      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: success() && env.LATEST != ''
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        if: success() && env.LATEST != ''
        with:
          context: .
          push: true
          tags: |
            zhangsean/rinetd:latest,
            zhangsean/rinetd:${{ env.LATEST }}
